name: Release FVTT Module

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.MY_PERSONAL_TOKEN }}
    steps:
      # 1. 저장소 체크아웃
      - uses: actions/checkout@v4

      # 2. 태그에서 버전 추출
      - name: Set version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      # 3. module.json 복사 및 갱신 (Release용)
      - name: Prepare module.json for Release
        run: |
          mkdir release
          cp module.json release/module.json
          cd release
          node <<'EOF'
          const fs = require('fs');
          const version = process.env.VERSION;
          const path = 'module.json';
          const json = JSON.parse(fs.readFileSync(path,'utf8'));

          // Release에 필요한 항목만 갱신
          json.version = version;
          json.download = `https://github.com/${process.env.GITHUB_REPOSITORY}/releases/download/v${version}/SR5ko.zip`;
          json.manifest = `https://github.com/${process.env.GITHUB_REPOSITORY}/releases/latest/download/module.json`;
          if (!json.id) json.id = "shadowrun5eko";

          fs.writeFileSync(path, JSON.stringify(json, null, 2), 'utf8');
          EOF
          cd ..

      # 4. ZIP 빌드
      - name: Build module ZIP
        run: |
          zip -r SR5ko.zip . -x ".git/*" ".github/*"

      # 5. Release 생성 및 파일 업로드
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            SR5ko.zip
            release/module.json
